@page "/project/mytasks"
@inject ProtectedSessionStorage ProtectedSessionStorage
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@if(loginState != null)
{
    <div class="box_main">
        <div class="box_mid">
            <br>
        @if(loginState.Type <= UsersType.Product)
        {
            @if(MyCreates == null)
            {
                <p>我创建的任务</p>
                <br>
            }
            else
            {
                <p>我创建的任务</p>
                <br>
                <AssetTaskTimeLine AssetTasks="MyCreates"/>
            }
            
        }
        </div>

        <div class="box_mid">
        @if(MyWorker == null)
        {
            <p>我的制作任务</p>
            <br>
        }
        else
        {
            <p>我的制作任务</p>
            <br>
            <AssetTaskTimeLine AssetTasks="MyWorker"/>
        }
        </div>

        <div class="box_mid">
        @if(MyReViewer == null)
        {
            <p>我的审核任务</p>
            <br>
        }
        else
        {
            <p>我的审核任务</p>
            <br>
            <AssetTaskTimeLine AssetTasks="MyReViewer"/>
        }
        <br>
        </div>
        <br>
        <br>
        <br>

    </div>
}
else
{
    <p>请先登录</p>
}

@code
{
    private UserLoginState? loginState;

    private List<JobTaskAsset>? MyCreates {get;set;}
    private List<JobTaskAsset>? MyWorker {get;set;}
    private List<JobTaskAsset>? MyReViewer {get;set;}
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            loginState = await UserFunc.IsLogin(ProtectedSessionStorage);
            if(loginState == null) return;
            if(loginState.Type <= UsersType.Product)
            {
                MyCreates = await HttpClient.GetFromJsonAsync<List<JobTaskAsset>>(NavigationManager.BaseUri + $"Admin/project/assets/tasks/creater/{loginState.Name}");
            }

            MyWorker = await HttpClient.GetFromJsonAsync<List<JobTaskAsset>>(NavigationManager.BaseUri + $"Admin/project/assets/tasks/worker/{loginState.Name}");
            MyReViewer = await HttpClient.GetFromJsonAsync<List<JobTaskAsset>>(NavigationManager.BaseUri + $"Admin/project/assets/tasks/reviewer/{loginState.Name}");
        }
        StateHasChanged();
    }
}

