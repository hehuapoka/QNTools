@page "/user/register"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

@inject IJSRuntime IJSRuntime

<div class="register_main">
    <h4 class="register_title">新用户注册</h4>
    <EditForm Model=user OnValidSubmit=PlaceOrder class="register_form">
        <DataAnnotationsValidator />

        <div class="register_item">
            <div class="login_label">显示名称</div>
            <InputText id="displayname" @bind-Value="user.DisplayName" class="register_text" placeholder="这里设置你的显示名称" style="width: 100%;border-radius: 3px;border-width:0px;font-size:0.5rem;height: 2rem;"/>
        </div>
        <ValidationMessage For="@(()=> user.DisplayName)"/>

        <div class="register_item">
            <div>账户名称:</div>
            <InputText id="name" @bind-Value="user.Name" class="register_text" style="width: 100%;border-radius: 3px;border-width:0px"/>
        </div>
        <ValidationMessage For="@(()=> user.Name)"/>

        <div class="register_item">
            <div>密码设置:</div>
            <input type="password" id="password" @bind="user.Password" class="register_text" style="width: 100%;border-radius: 3px;border-width:0px"/>
        </div>
        <ValidationMessage For="@(()=> user.Password)"/>

        <div class="register_item">
            <div>密码确认:</div>
            <input type="password" id="password" @bind="rePassword" class="register_text" style="width: 100%;border-radius: 3px;border-width:0px"/>
            @if(isError)
            {
                <p style="font-size: 0.5rem;color: #ff0000;">你的密码和第一次输入的密码不一样 @isError</p>
            }
        </div>   

        <div class="register_item">
            <div>注册类型:</div>
            <InputSelect id="type" @bind-Value="user.Type">
                @foreach (var item in Enum.GetValues(typeof(UsersType)))
                {
                    <option value="@item">@item</option>
                }
            </InputSelect>
        </div>

        <ValidationMessage For="@(()=> user.Type)"/>



        <button class="register_button" type="submit" disabled=@isError>提交</button>

        
    </EditForm>
</div>


@code
{
    private bool isError {get
                    {
                    return rePassword != user.Password;
                    }
    }
    private string? rePassword {get;set;}
    private UsersTemp user =new(){Type=UsersType.Anim};

    async Task PlaceOrder()
    {
        if(user.Type == UsersType.SuperAdmin)
        {
            await IJSRuntime.InvokeVoidAsync("alert","注册失败！该用户类型不可注册");
            return;
        }
        if(isError)
        {
            return;
        }
        var response=await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri+"admin/register",user);
        var ok = await response.Content.ReadFromJsonAsync<bool>();
        if(!ok)
            await IJSRuntime.InvokeVoidAsync("alert","注册失败！可能该用户已存在");
        else
            NavigationManager.NavigateTo("user/login");
    }
}

